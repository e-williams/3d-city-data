{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link,\n// client side routing - update URL w/out requesting new doc from server\nLinks, LiveReload, Meta, NavLink, Outlet, Scripts, ScrollRestoration, useLoaderData, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\n// existing imports\n\nimport appStylesHref from \"./app.css\";\nimport { createEmptyContact, getContacts } from \"./data\";\nexport const action = async () => {\n  const contact = await createEmptyContact();\n  return redirect(`/contacts/${contact.id}/edit`);\n};\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: appStylesHref\n}];\nexport const loader = async ({\n  request\n}) => {\n  const url = new URL(request.url);\n  const q = url.searchParams.get(\"q\");\n  const contacts = await getContacts(q);\n  return json({\n    contacts,\n    q\n  });\n};\nexport default function App() {\n  _s();\n  const {\n    contacts,\n    q\n  } = useLoaderData(); // to get variable type\n  const navigation = useNavigation();\n  const submit = useSubmit();\n  const searching = navigation.location && new URLSearchParams(navigation.location.search).has(\"q\");\n  useEffect(() => {\n    const searchField = document.getElementById(\"q\");\n    if (searchField instanceof HTMLInputElement) {\n      searchField.value = q || \"\";\n    }\n  }, [q]);\n  return <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div id=\"sidebar\">\n          <h1>Remix Contacts</h1>\n          <div>\n            <Form id=\"search-form\" onChange={event => {\n            const isFirstSearch = q === null;\n            submit(event.currentTarget, {\n              replace: !isFirstSearch\n            });\n          }} role=\"search\">\n\n              <input aria-label=\"Search contacts\" className={searching ? \"loading\" : \"\"} defaultValue={q || \"\"} id=\"q\" name=\"q\" placeholder=\"Search\" type=\"search\" />\n\n              <div id=\"search-spinner\" aria-hidden hidden={!searching} />\n\n            </Form>\n            <Form method=\"post\">\n              <button type=\"submit\">New</button>\n            </Form>\n          </div>\n          <nav>\n            {contacts.length ? <ul>\n                {contacts.map(contact => <li key={contact.id}>\n                    <NavLink className={({\n                isActive,\n                isPending\n              }) => isActive ? \"active\" : isPending ? \"pending\" : \"\"} to={`contacts/${contact.id}`}>\n\n                      <Link to={`contacts/${contact.id}`}>\n                        {contact.first || contact.last ? <>\n                            {contact.first} {contact.last}\n                          </> : <i>No Name</i>}\n                    {\" \"}\n                        {contact.favorite ? <span>\u2605</span> : null}\n                      </Link>\n                    </NavLink>\n                  </li>)}\n              </ul> : <p>\n                <i>No contacts</i>\n              </p>}\n\n          </nav>\n        </div>\n        <div className={navigation.state === \"loading\" && !searching ? \"loading\" : \"\"} id=\"detail\">\n\n          <Outlet /> {/* outlet for routes */}\n        </div>\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>;\n}\n_s(App, \"bsYwNJAcI2cV6W75urp8P8f5nbA=\", false, function () {\n  return [useLoaderData, useNavigation, useSubmit];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
